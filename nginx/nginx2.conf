load_module modules/ngx_http_headers_more_filter_module.so;

events {}

http {
    log_format with_location '$remote_addr, $remote_user, sn: $server_name - $upstream_addr [$time_local] "$host$request_uri" '
                                    ' $status $body_bytes_sent '
                                    '"$http_referer" "$upstream_cache_status"'
                                    'Response-Location:"$sent_http_location"';

    access_log /var/log/nginx/access_with_location.log with_location;

    include mime.types;
    upstream balanced {
        server 172.17.0.1:8091 weight=2;
        server 172.17.0.1:8092 weight=1;
        server 172.17.0.1:8093 weight=1;
    }

    upstream mirror {
        server 172.17.0.1:8094;
    }

    map $request_method $backend {
        GET     balanced;
        default http://172.17.0.1:8091;
    }

    proxy_cache_path /data/nginx/cache keys_zone=mycache:5m;
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 256;
    gzip_comp_level 5;
    gzip_vary on;

    server {
        proxy_cache mycache;
        proxy_cache_min_uses 3;
        proxy_cache_valid 200 302  5m;
        proxy_cache_valid 404      15s;
        proxy_cache_key "$scheme$proxy_host$request_uri";
        proxy_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie;
        listen 85;
        charset utf-8;

        more_set_headers "Server: Music Shop";

        location = /documentation {
            try_files /static/readme.html /readme.html;
        }
        location = /test {
            try_files /static/readme.html /readme.html;
        }
        location = /status {
            stub_status;
        }
        location /api/v2/ {
            rewrite ^/api/v2(/.*)$ /v2$1 break;
            proxy_pass http://$backend;
        }
        location /mirror/api/v2/ {
            rewrite ^/mirror/api/v2(/.*)$ /v2$1 break;
            proxy_pass http://mirror;
        }
        location / {
            alias /static/;
        }
    }
}